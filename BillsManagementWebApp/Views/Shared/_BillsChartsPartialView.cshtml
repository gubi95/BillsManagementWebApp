<script>
    var allowToChangePeriodDropdown = false;

    jQuery(document).ready(function () {        
        jQuery('#ddlChartsPeriod').selectpicker();
        jQuery('#ddlChartsPeriod').on('change', function () {
            ChangeBillsDateRange(jQuery(this).selectpicker('val'));
        });

        jQuery('#dtBillsRangeFrom').datetimepicker({
            locale: 'pl',
            format: 'DD.MM.YYYY',
            ignoreReadonly: true
        });

        jQuery('#dtBillsRangeTo').datetimepicker({
            locale: 'pl',
            format: 'DD.MM.YYYY',
            ignoreReadonly: true,
            useCurrent: false //Important! See issue #1075
        });

        jQuery('#dtBillsRangeFrom').on('dp.change', function (e) {
            jQuery('#dtBillsRangeTo').data('DateTimePicker').minDate(e.date);

            if (allowToChangePeriodDropdown) {
                CreateCategoryBarChart();
                jQuery('#ddlChartsPeriod').selectpicker('val', 'NONE');
            }
            allowToChangePeriodDropdown = true;            
        });

        jQuery('#dtBillsRangeTo').on('dp.change', function (e) {
            jQuery('#dtBillsRangeFrom').data('DateTimePicker').maxDate(e.date);

            if (allowToChangePeriodDropdown) {
                CreateCategoryBarChart();
                jQuery('#ddlChartsPeriod').selectpicker('val', 'NONE');
            }
            allowToChangePeriodDropdown = true;
        });
    });

    function ChangeBillsDateRange(ddlValue) {        
        switch (ddlValue) {
            case 'CM':
                SetBillsDateRange_currentMonth();
                CreateCategoryBarChart();
                break;
            case 'LM':
                SetBillsDateRange_lastMonth();
                CreateCategoryBarChart();
                break;
            case 'L30D':
                SetBillsDateRange_last30Days();
                CreateCategoryBarChart();
                break;
            case 'CY':
                SetBillsDateRange_currentYear();
                CreateCategoryBarChart();
                break;
            case 'LY':
                SetBillsDateRange_lastYear();
                CreateCategoryBarChart();
                break;
        }
    }

    function SetBillsDateRange_currentMonth() {
        var date = new Date();
        var dtStart = new Date(date.getFullYear(), date.getMonth(), 1);
        var dtEnd = new Date(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59);
        SetBillsDateRange(dtStart, dtEnd);
    }

    function SetBillsDateRange_lastMonth() {        
        var dtStart = new Date();
        dtStart.setDate(1);
        dtStart.setMonth(dtStart.getMonth() - 1);
        var dtEnd = new Date(dtStart.getFullYear(), dtStart.getMonth() + 1, 0, 23, 59, 59);
        SetBillsDateRange(dtStart, dtEnd);
    }

    function SetBillsDateRange_last30Days() {
        var dtEnd = new Date();
        var dtStart = new Date();
        dtStart.setDate(dtEnd.getDate() - 30);
        SetBillsDateRange(dtStart, dtEnd);
    }

    function SetBillsDateRange_currentYear() {
        var date = new Date();
        var dtStart = new Date(date.getFullYear(), 0, 1);
        var dtEnd = new Date(date.getFullYear(), 11, 31, 23, 59, 59);
        SetBillsDateRange(dtStart, dtEnd);
    }

    function SetBillsDateRange_lastYear() {
        var date = new Date();
        var dtStart = new Date(date.getFullYear() - 1, 0, 1);
        var dtEnd = new Date(date.getFullYear() - 1, 11, 31, 23, 59, 59);
        SetBillsDateRange(dtStart, dtEnd);
    }

    function SetBillsDateRange(dtStart, dtEnd) {
        allowToChangePeriodDropdown = false;
        jQuery('#dtBillsRangeFrom').data('DateTimePicker').date(dtStart);
        allowToChangePeriodDropdown = false;
        jQuery('#dtBillsRangeTo').data('DateTimePicker').date(dtEnd);
    }

    function CreateCategoryBarChart() {
        jQuery.ajax({
            type: 'POST',
            url: '/Handlers/ChartsDataHandler.ashx',
            contentType: 'application/json',
            data: JSON.stringify({
                From: FormatJSDateToCSharpDate(jQuery('#dtBillsRangeFrom').data('DateTimePicker').date()._d),
                To: FormatJSDateToCSharpDate(jQuery('#dtBillsRangeTo').data('DateTimePicker').date()._d),
                ChartType: 'CategoryBarChart'
            }),
            beforeSend: function() {
                ShowHideAjaxWheel(true);
            },
            success: function (data) {                
                var chartData = [];
                var chartCategories = [];
                for (var i = 0; i < data.length; i++) {
                    chartData.push({
                        name: data[i].CategoryName,
                        color: data[i].CategoryColor,
                        data: [data[i].Price]
                    });

                    chartCategories.push(name);
                }

                chartData.sort(function (a, b) {
                    return b.data[0] - a.data[0];
                });

                DrawCategoryBarChart(chartData, chartCategories);
                ShowHideAjaxWheel(false);
            },
            error: function () {
                ShowHideAjaxWheel(false);
            }
        });
    }

    var arrCurrentChartBudgets = [];
    var arrCurrentChartBudgetsCategoryValues = [];
    var categoryBudgetChartTotalPrice = null;
    function CreateCategoryBudgetBarChart() {
        jQuery.ajax({
            type: 'POST',
            url: '/Handlers/ChartsDataHandler.ashx',
            contentType: 'application/json',
            data: JSON.stringify({
                From: FormatJSDateToCSharpDate(jQuery('#dtBillsRangeFrom').data('DateTimePicker').date()._d),
                To: FormatJSDateToCSharpDate(jQuery('#dtBillsRangeTo').data('DateTimePicker').date()._d),
                ChartType: 'CategoryBarChart'
            }),
            beforeSend: function () {
                ShowHideAjaxWheel(true);
            },
            success: function (data) {                
                var chartData = [];
                var chartCategories = [];
                for (var i = 0; i < data.length; i++) {
                    chartData.push({
                        name: data[i].CategoryName,
                        color: data[i].CategoryColor,
                        data: [data[i].Price],
                        budget: data[i].MonthBudget,
                        type: 'column',
                        yAxis: 0
                    });

                    chartCategories.push(name);
                }

                chartData.sort(function (a, b) {
                    return b.data[0] - a.data[0];
                });

                var lineChartData = [];

                arrCurrentChartBudgetsCategoryValues = [];

                for (var j = 0; j < chartData.length; j++) {                    
                    var value = chartData[j].data[0];                    
                    chartData[j].data = new Array();

                    for (var k = 0; k < chartData.length; k++) {
                        if (j == k) {
                            arrCurrentChartBudgetsCategoryValues.push(value);
                            chartData[j].data.push(value);
                        }
                        else {                            
                            chartData[j].data.push(0);                            
                        }
                    }

                    lineChartData.push(chartData[j].budget != 0.00 ? chartData[j].budget : null);
                }

                arrCurrentChartBudgets = lineChartData;

                chartData.push({
                    name: 'Budżet',
                    type: 'line',
                    lineWidth: 0,
                    color: '#FF0000',
                    lineColor: 'rgba(0,0,0,0)',
                    data: lineChartData,
                    tooltip: {
                        shared: false,
                        pointFormatter: function () {
                            var index = this.index;
                            var balance = (arrCurrentChartBudgets[index] - arrCurrentChartBudgetsCategoryValues[index]).toFixed(2);
                            var balanceString = (balance > 0 ? '+' + balance : balance);
                            return  'Ustalony budżet: <b>' + arrCurrentChartBudgets[index].toFixed(2) + ' zł</b><br/>' +
                            'Bilans: <b style="color: ' + (balance == 0.00 ? 'black' : (balance < 0.00 ? 'red' : 'green')) + ';">' + balanceString + ' zł</b>';
                        }
                    },
                });

                DrawCategoryBudgetBarChart(chartData, chartCategories);
                ShowHideAjaxWheel(false);
            },
            error: function () {
                ShowHideAjaxWheel(false);
            }
        });
    }

    var categoryPieChartTotalPrice = null;

    function DrawCategoryBarChart(data, categories) {
        categoryPieChartTotalPrice = 0;              
        for (var i = 0; i < data.length; i++) {
            categoryPieChartTotalPrice += data[i].data[0];
        }

        Highcharts.chart('categoryBarChartCanvas', {
            chart: {
                backgroundColor: 'rgba(255,255,255,0.25)',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'column',
                events: {
                    load: function () {
                        jQuery('#categoryPieChartCanvas .highcharts-text-outline').attr('stroke-width', 0);
                    },
                    redraw: function () {
                        jQuery('#categoryPieChartCanvas .highcharts-text-outline').attr('stroke-width', 0);
                    }
                }
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Wydatki na poszczególne kategorie',
                style: {
                    color: 'white',
                    fontFamily: '\'Lato\', sans-serif',
                    lineHeight: '28px',
                    fontSize: '32px'
                }
            },
            xAxis: {
                categories: categories,
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Kwota [zł]',                    
                },
                color: '#FFFFFF'
            },
            tooltip: {                
                pointFormatter: function () { return this.y + ' zł / ' + categoryPieChartTotalPrice + ' zł <br/> <b>' + ((this.y / categoryPieChartTotalPrice) * 100).toFixed(2).toString() + '%</b>'; }
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        formatter: function () { return this.y.toFixed(2).toString() + ' zł'; },
                        color: '#FFFFFF'
                    }
                }
            },
            series: data
        });
    }

    function DrawCategoryBudgetBarChart(data, categories) {
        categoryBudgetChartTotalPrice = 0;
        for (var i = 0; i < data.length; i++) {
            if (data[i].data[i] != undefined) {
                categoryBudgetChartTotalPrice += data[i].data[i];
            }
        }

        Highcharts.chart('categoryBarChartBudgetCanvas', {
            chart: {
                backgroundColor: 'rgba(255,255,255,0.25)',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Miesięczny budżet',
                style: {
                    color: 'white',
                    fontFamily: '\'Lato\', sans-serif',
                    lineHeight: '28px',
                    fontSize: '32px'
                }
            },           
            xAxis: [{
                categories: categories,
                crosshair: true
            }],
            yAxis: [
                { 
                    min: 0,
                    title: {
                        text: 'Budżet [zł]',
                    },                    
                },
                { 
                    title: {
                        text: '',                        
                    },
                min: 0,               
                opposite: true
            }],
            tooltip: {
                shared: false,
                pointFormatter: function () { return this.y.toFixed(2) + ' zł / ' + categoryBudgetChartTotalPrice.toFixed(2) + ' zł <br/> <b>' + ((this.y / categoryBudgetChartTotalPrice) * 100).toFixed(2).toString() + '%</b>'; }
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    pointPadding: 0.2,
                    borderWidth: 0,                    
                }
            },
            series: data
        });
    }
</script>


<div class="row" style="padding-bottom: 20px;">
    <div class="col-md-4">
        <span class="custom-label" style="margin-right: 5px;">Okres:</span>    
        <select id="ddlChartsPeriod">
            <option value="NONE">---</option>
            <option value="CM">Obecny miesiąc</option>
            <option value="LM">Poprzedni miesiąc</option>
            <option value="L30D">Ostatnie 30 dni</option>
            <option value="CY">Obecny rok</option>
            <option value="LY">Poprzedni rok</option>
        </select>
    </div>
    <div class="col-md-2" style="text-align: right; padding-top: 5px;">
        <span class="custom-label">Zakres:</span>
    </div>
    <div class="col-md-3">
        <div class='input-group date' id='dtBillsRangeFrom'>
            <input type='text' class="form-control" readonly="readonly" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="col-md-3">
        <div class='input-group date' id='dtBillsRangeTo'>
            <input type='text' class="form-control" readonly="readonly" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
</div>

<div id="categoryBarChartCanvas" style="width: 100%; height: 400px; margin: 0 auto;"></div>
<div id="categoryBarChartBudgetCanvas" style="width: 100%; height: 400px; margin: 0 auto; margin-top: 30px;"></div>